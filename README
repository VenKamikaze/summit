Summit

Overview:
In it's current state, Summit can abstract away most of the server-side code required to build a reporting solution for an SQL query. It also provides some fairly basic client-side HTML, CSS and javascript code as an example for using the Summit reporting functionality.

Future Goal:
In the short term, I really need to document the structure of Summit better, including some diagrams and some examples of how it all fits together so others can dive in and use it with minimal effort.
From there, I want to work on some issues in the reporting side of Summit, plus some additional reporting features I would like to implement. I'd also like to start separating out all server side reporting functionality into it's own JAR(s) for easier inclusion into other projects. After that, I'd like to start building a front-end for adding templates, and building pages for reporting.

Long term I'd like to have a Free/Libre and Open Source Software alternative to Oracle's Application Express.

Reporting Example:
The following screenshots show case some of the current reporting functionality of Summit. This example is driven from the 'src/main/resources/test_dml.sql'.

test_dml.sql creates 

1) After running test_dml.sql and hitting application '1', page '2' (defined via this URL: http://localhost:8080/summit/run/1/2) we should see this screen:

2a) Out of the box, Summit provides pagination capability as we can see if we change the 'rows' drop-down to '5' and hit the 'Go' button:

2b) Page 2 when hitting the blue 'next' arrow

3) Summit provides filtering capability across all columns in a report:

4) Plus a few basic filtering options (exact match, contains, starts with, ends with):

5) In it's current state, Summit can link off to other pages on selection/clicking of a row. This can be customised with some minimal changes to the example client side javascript code included in test_dml.sql.