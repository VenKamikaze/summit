package org.awiki.kamikaze.summit.domain.codetable;
// Generated Oct 31, 2013 9:11:16 PM by Hibernate Tools 3.4.0.CR1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


/**
 * CodeFieldSourceType generated by hbm2java
 */
@Entity
@Table(name = "code_field_source_type", schema = "public")
public class CodeFieldSourceType implements java.io.Serializable, CodeTable
{

  /**
   * 
   */
  private static final long serialVersionUID = 3888121341827987520L;
  
  private String          code;
  private String          description;
  private Long         sortOrder;
  private CodeSourceType  codeSourceProcessor;  // CODE_SOURCE_CODE.CODE
  //private Set<Field> fieldsForDefaultValueType = new HashSet<Field>(0);
  //private Set<Field> fieldsForSourceType       = new HashSet<Field>(0);

  public CodeFieldSourceType()
  {
  }

  public CodeFieldSourceType(String code, String description)
  {
    this.code = code;
    this.description = description;
  }

  public CodeFieldSourceType(String code, String description,
          Long sortOrder, CodeSourceType codeSourceProcessor)
  {
    this.code = code;
    this.description = description;
    this.sortOrder = sortOrder;
    this.codeSourceProcessor = codeSourceProcessor;
    //this.fieldsForDefaultValueType = fieldsForDefaultValueType;
    //this.fieldsForSourceType = fieldsForSourceType;
  }

  @Id
  @Column(name = "code", unique = true, nullable = false, length = 10)
  public String getCode()
  {
    return this.code;
  }

  public void setCode(String code)
  {
    this.code = code;
  }

  @Column(name = "description", nullable = false)
  public String getDescription()
  {
    return this.description;
  }

  public void setDescription(String description)
  {
    this.description = description;
  }

  @Column(name = "sort_order")
  public Long getSortOrder()
  {
    return this.sortOrder;
  }

  public void setSortOrder(Long sortOrder)
  {
    this.sortOrder = sortOrder;
  }

  @ManyToOne(fetch=FetchType.EAGER)
  @JoinColumn(name = "source_type_code")
  public CodeSourceType getCodeSourceType() {
    return codeSourceProcessor;
  }

  public void setCodeSourceType(CodeSourceType codeSourceType) {
    this.codeSourceProcessor = codeSourceType;
  }

  /*
  @OneToMany(fetch = FetchType.LAZY, mappedBy = "codeFieldSourceTypeByDefaultValueType")
  public Set<Field> getFieldsForDefaultValueType()
  {
    return this.fieldsForDefaultValueType;
  }

  public void setFieldsForDefaultValueType(Set<Field> fieldsForDefaultValueType)
  {
    this.fieldsForDefaultValueType = fieldsForDefaultValueType;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "codeFieldSourceTypeBySourceType")
  public Set<Field> getFieldsForSourceType()
  {
    return this.fieldsForSourceType;
  }

  public void setFieldsForSourceType(Set<Field> fieldsForSourceType)
  {
    this.fieldsForSourceType = fieldsForSourceType;
  }
  */
}
