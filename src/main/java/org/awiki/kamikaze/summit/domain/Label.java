package org.awiki.kamikaze.summit.domain;
// Generated Oct 31, 2013 9:11:16 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.awiki.kamikaze.summit.domain.codetable.CodeLabelType;

/**
 * Field generated by hbm2java
 */
@Entity
@Table(name = "LABEL")
public class Label implements java.io.Serializable
{
  private static final long serialVersionUID = -48598459116L;
  
  private long                      id;
  private String                    text;
  private String                    notes;
  private CodeLabelType             codeLabelType;
  private Field                     field = null;
  private Template                  template;
  
  private Conditional         conditional = null;
  
  public Label()
  {
  }

  public Label(long id, String  text)
  {
    this.id = id;
    this.text = text;
  }

  public Label(long id, String source, Field field)
  {
    this(id,source);
    this.field = field;
  }

  @Id
  @Column(name = "ID", unique = true, nullable = false)
  public long getId()
  {
    return this.id;
  }

  public void setId(long id)
  {
    this.id = id;
  }

  @Column(name = "TEXT")
  public String  getText()
  {
    return this.text;
  }

  public void setText( String text)
  {
    this.text = text;
  }

  @Column(name = "NOTES")
  public String  getNotes()
  {
    return this.notes;
  }

  public void setNotes( String notes)
  {
    this.notes = notes;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "LABEL_TYPE_CODE", nullable = false)
  public CodeLabelType getCodeLabelType()
  {
    return this.codeLabelType;
  }

  public void setCodeLabelType(CodeLabelType codeFieldType)
  {
    this.codeLabelType = codeFieldType;
  }
  
  @OneToOne(mappedBy="label")
  public Field getField()
  {
    return field;
  }

  public void setField(Field field)
  {
    this.field = field;
  }
  
  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "TEMPLATE_ID", nullable = false)
  public Template getTemplate() {
    return template;
  }

  public void setTemplate(Template template) {
    this.template = template;
  }

  @OneToOne(cascade=CascadeType.ALL)
  @JoinTable(name = "LABEL_CONDITIONAL",
          joinColumns = { @JoinColumn(name = "LABEL_ID") },
          inverseJoinColumns = { @JoinColumn(name = "CONDITIONAL_ID") })
  public Conditional getConditional()
  {
    return conditional;
  }

  public void setConditional(Conditional conditional)
  {
    this.conditional = conditional;
  }
}
