package org.awiki.kamikaze.summit.domain;
// Generated Oct 31, 2013 9:11:16 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.awiki.kamikaze.summit.domain.codetable.CodeSourceType;

/**
 * PageProcessing generated by hbm2java
 */
@Entity
@Table(name = "PAGE_PROCESSING_SOURCE")
public class PageProcessingSource implements java.io.Serializable
{

  /**
   * This domain is a join table between PAGE_PROCESSING and SOURCE
   * It contains an additional column 'SOURCE_TYPE_CODE' which specifies
   * the source code language used in the joined SOURCE. E.g. you may have
   * SQL or python, or static text.
   */
  private static final long serialVersionUID = -4307936142895462441L;
  
  private long                   id;
  private PageProcessing         pageProcessing;
  private Source                 source;
  private CodeSourceType         codeSourceType;

  public PageProcessingSource()
  {
  }

  @Id
  @Column(name = "ID", unique = true, nullable = false)
  public long getId()
  {
    return this.id;
  }

  public void setId(long id)
  {
    this.id = id;
  }
  
  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "PAGE_PROCESSING_ID", nullable = false)
  public PageProcessing getPageProcessing()
  {
    return this.pageProcessing;
  }

  public void setPageProcessing(PageProcessing pageProcessing)
  {
    this.pageProcessing = pageProcessing;
  }

  @ManyToOne(fetch = FetchType.EAGER)
  @JoinColumn(name = "SOURCE_TYPE_CODE", nullable = false)
  public CodeSourceType getCodeSourceType()
  {
    return this.codeSourceType;
  }

  public void setCodeSourceType(CodeSourceType codeSourceType)
  {
    this.codeSourceType = codeSourceType;
  }

  @ManyToOne
  @JoinColumn(name = "SOURCE_ID", nullable = false)
  public Source getSource()
  {
    return this.source;
  }

  public void setSource(Source source)
  {
    this.source = source;
  }

}
