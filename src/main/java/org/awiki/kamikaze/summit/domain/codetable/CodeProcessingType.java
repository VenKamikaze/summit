package org.awiki.kamikaze.summit.domain.codetable;
// Generated Oct 31, 2013 9:11:16 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CodeProcessingType generated by hbm2java
 */
@Entity
@Table(name = "code_processing_type", schema = "public")
public class CodeProcessingType implements java.io.Serializable
{

  /**
   * 
   */
  private static final long serialVersionUID = -1417754221592950160L;
  
  private String              code;
  private String              description;
  private Long                sortOrder;
  private CodeSourceType      codeSourceType;
  
  //private Set<PageProcessing> pageProcessings = new HashSet<PageProcessing>(0);
  //xx // TODO changed definition
  
  public CodeProcessingType()
  {
  }

  public CodeProcessingType(String code, String description)
  {
    this.code = code;
    this.description = description;
  }

  public CodeProcessingType(String code, String description, Long sortOrder, CodeSourceType sourceTypes
      /*Set<PageProcessing> pageProcessings*/)
  {
    this.code = code;
    this.description = description;
    this.sortOrder = sortOrder;
    this.codeSourceType = sourceTypes;
    //this.pageProcessings = pageProcessings;
  }

  @Id
  @Column(name = "code", unique = true, nullable = false, length = 10)
  public String getCode()
  {
    return this.code;
  }

  public void setCode(String code)
  {
    this.code = code;
  }

  @Column(name = "description", nullable = false)
  public String getDescription()
  {
    return this.description;
  }

  public void setDescription(String description)
  {
    this.description = description;
  }

  @Column(name = "sort_order")
  public Long getSortOrder()
  {
    return this.sortOrder;
  }

  public void setSortOrder(Long sortOrder)
  {
    this.sortOrder = sortOrder;
  }
  
  @ManyToOne(fetch=FetchType.EAGER)
  @JoinColumn(name = "source_type_code")
  public CodeSourceType getCodeSourceType() {
    return codeSourceType;
  }

  public void setCodeSourceType(CodeSourceType codeSourceType) {
    this.codeSourceType = codeSourceType;
  }
  
  
/*
  @OneToMany(fetch = FetchType.LAZY, mappedBy = "codeProcessingType")
  public Set<PageProcessing> getPageProcessings()
  {
    return this.pageProcessings;
  }

  public void setPageProcessings(Set<PageProcessing> pageProcessings)
  {
    this.pageProcessings = pageProcessings;
  }
*/
}
